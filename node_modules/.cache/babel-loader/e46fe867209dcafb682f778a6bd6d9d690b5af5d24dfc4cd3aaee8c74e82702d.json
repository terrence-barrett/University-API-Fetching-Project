{"ast":null,"code":"var _jsxFileName = \"/home/rice_warlord/Desktop/learning_react/learning_react/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todoList, setTodoList] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const handleChange = event => {\n    setNewTask(event.target.value);\n  };\n  const addTask = () => {\n    const task = {\n      id: todoList.length === 0 ? 1 : todoList[todoList.length - 1].id + 1,\n      taskName: newTask,\n      completed: false\n    };\n    setTodoList([...todoList, newTask]);\n  };\n  const deleteTask = id => {\n    setTodoList(todoList.filter(task => task.id !== id));\n  };\n  const completeTask = id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Write your to-do list...\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"List of tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this), \"'\", todoList.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"jO/Lkfwo3o+WjUZaQp0BsDWv0dk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","todoList","setTodoList","newTask","setNewTask","handleChange","event","target","value","addTask","task","id","length","taskName","completed","deleteTask","filter","completeTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","map","_c","$RefreshReg$"],"sources":["/home/rice_warlord/Desktop/learning_react/learning_react/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n    const [todoList, setTodoList] = useState([]);\n    const [newTask, setNewTask] = useState(\"\")\n\n\n    const handleChange = (event) => {\n        setNewTask(event.target.value)\n    }\n\n\n    const addTask =()=>{\n\n        const task = {\n          id: todoList.length === 0? 1: todoList[todoList.length-1].id + 1,\n          taskName: newTask,\n          completed: false,\n        }\n        setTodoList([...todoList, newTask])\n    }\n\n\n    const deleteTask = (id)=>{\n        setTodoList(todoList.filter((task)=>task.id !==id));\n    }\n    \n    const completeTask =(id)\n\n\n    return(\n        <div className='App'>\n            <div className='addTask'>\n                <p>TODO LIST</p>\n                <input placeholder='Write your to-do list...' onChange={handleChange}/>\n                <button onClick={addTask}>Add Task</button>\n\n              <p>List of tasks</p>\n              <div className='list'></div>'\n                  {todoList.map((task)=>{\n                      return(\n                        <h1>{task}</h1>\n                      )\n                  })}\n            </div>\n        </div>\n    )\n}\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAG1C,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC5BF,UAAU,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAGD,MAAMC,OAAO,GAAEA,CAAA,KAAI;IAEf,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAEV,QAAQ,CAACW,MAAM,KAAK,CAAC,GAAE,CAAC,GAAEX,QAAQ,CAACA,QAAQ,CAACW,MAAM,GAAC,CAAC,CAAC,CAACD,EAAE,GAAG,CAAC;MAChEE,QAAQ,EAAEV,OAAO;MACjBW,SAAS,EAAE;IACb,CAAC;IACDZ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEE,OAAO,CAAC,CAAC;EACvC,CAAC;EAGD,MAAMY,UAAU,GAAIJ,EAAE,IAAG;IACrBT,WAAW,CAACD,QAAQ,CAACe,MAAM,CAAEN,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAIA,EAAE,CAAC,CAAC;EACvD,CAAC;EAED,MAAMM,YAAY,GAAGN,EAAG;EAGxB,oBACIb,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBrB,OAAA;MAAKoB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBrB,OAAA;QAAAqB,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChBzB,OAAA;QAAO0B,WAAW,EAAC,0BAA0B;QAACC,QAAQ,EAAEpB;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvEzB,OAAA;QAAQ4B,OAAO,EAAEjB,OAAQ;QAAAU,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAE7CzB,OAAA;QAAAqB,QAAA,EAAG;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACpBzB,OAAA;QAAKoB,SAAS,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KACxB,EAACtB,QAAQ,CAAC0B,GAAG,CAAEjB,IAAI,IAAG;QAClB,oBACEZ,OAAA;UAAAqB,QAAA,EAAKT;QAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAErB,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvB,EAAA,CA7CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}